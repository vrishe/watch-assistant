<ResourceDictionary x:Class="watch_assistant.Themes.WindowStyle"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Base title button style -->
    <Style x:Key="TitleBarButtonBase" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Opacity" Value="0.6" />
     </Style>

    <!-- Close Button -->
    <Style x:Key="CloseTitleBarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TitleBarButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ButtonRoot">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="ButtonEffect" ShadowDepth="0" Color="Red" BlurRadius="0"/>
                        </Grid.Effect>
                        <Image x:Name="Image" Source="\Themes\Images\normal close.png" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Width="13" Height="13"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="\Themes\Images\highlighted close.png" />
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                            To="1" Duration="0:0:0.1" />

                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                            Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                            To="10" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                            Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                            To="0" Duration="0:0:0.2" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                            To="0.6" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Minimize Button -->
    <Style x:Key="MinimizeTitleBarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TitleBarButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="Image" Source="\Themes\Images\normal minimize.bmp" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Width="13" Height="13"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="\Themes\Images\highlighted minimize.bmp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Maximize Button -->
    <Style x:Key="MaximizeTitleBarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TitleBarButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="Image" Source="\Themes\Images\normal maximize.bmp" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Width="13" Height="13"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="\Themes\Images\highlighted maximize.bmp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Border defining the frame of the Window -->
    <Style x:Key="WindowRoot" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
                <Setter Property="Margin" Value="{DynamicResource WindowRootMargin}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowBorderBase" TargetType="{x:Type Border}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
                <Setter Property="CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="WindowFrameBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource WindowBorderBase}">
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="{DynamicResource WindowFrameBrush}" />
        <Setter Property="BorderBrush" Value="DimGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="TitleBarBackgroundBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource WindowBorderBase}">
        <Setter Property="Background" Value="{DynamicResource TitleBarBackgroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="30" />
    </Style>

    <Style x:Key="SizingGrip" TargetType="Rectangle">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Fill" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <!-- Window Template -->
    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <ControlTemplate.Resources>
            <GridLength x:Key="BorderWidth">6</GridLength>
        </ControlTemplate.Resources>

        <!-- SizeChanged -->
        <Grid x:Name="WindowRoot" Style="{DynamicResource WindowRoot}" SizeChanged="OnWindowSizeChanged" Loaded="OnWindowLoaded"> 
            <Border x:Name="WindowFrame" Style="{DynamicResource WindowFrameBorder}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding ElementName=WindowFrame,Path=CornerRadius.TopLeft}"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="{Binding ElementName=WindowFrame,Path=CornerRadius.BottomRight}"/>
                    </Grid.RowDefinitions>
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ElementName=WindowFrame,Path=CornerRadius.TopRight}"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="{Binding ElementName=WindowFrame,Path=CornerRadius.BottomLeft}"/>
                    </Grid.ColumnDefinitions>

                    <!-- MouseMove && MouseLeftButtonDown -->
                    <Border x:Name="WindowLayoutRoot"
                            MouseMove="OnBorderMouseMove"
                            MouseLeftButtonDown="OnBorderMouseLeftButtonDown"
                            CornerRadius="{Binding ElementName=WindowFrame, Path=CornerRadius}"
                            Background="{DynamicResource WindowBackgroundBrush}"
                            Grid.Row="1"
                            Grid.Column="1">
                          
                        <!--<Grid x:Name="WindowLayout">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="HeaderRow" Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                        
                                <ContentPresenter x:Name="LeftContentCell" Grid.Column="0"/>
                                <ContentPresenter x:Name="CaptionContentCell" Grid.Column="1"/>-->
                                        
                                <!-- Window state buttons -->
                        <!--<StackPanel Margin="0,0,5,0" Orientation="Horizontal" Grid.Column="2" VerticalAlignment="Center">
                                    <Button Style="{StaticResource MinimizeTitleBarButton}" Click="MinimizeWindow" Width="13" Height="13"/>
                                    <Button Style="{StaticResource MaximizeTitleBarButton}" Click="MaximizeWindow"  Width="13" Height="13"/>
                                    <Button Style="{StaticResource CloseTitleBarButton}" Command="{Binding Path=Commands[CloseWindow]}" Width="13" Height="13"/>
                                </StackPanel>
                            </Grid>-->

                            <!-- The window content 
                        </Grid>-->
                            
                        
                        <Border x:Name="WindowContent" Grid.Row="1">
                            <ContentPresenter />
                        </Border>
                    </Border>

                    <!-- Side grips -->
                    <Rectangle Grid.Row="0" Grid.Column="1" x:Name="topSizeGrip" Style="{StaticResource SizingGrip}"/>
                    <Rectangle Grid.Row="1" Grid.Column="0" x:Name="leftSizeGrip" Style="{StaticResource SizingGrip}"/>
                    <Rectangle Grid.Row="1" Grid.Column="2" x:Name="rightSizeGrip" Style="{StaticResource SizingGrip}"/>
                    <Rectangle Grid.Row="2" Grid.Column="1" x:Name="bottomSizeGrip" Style="{StaticResource SizingGrip}"/>
                    <!--Corner grips -->
                    <Rectangle Grid.Row="0" Grid.Column="0" x:Name="topLeftSizeGrip" Style="{StaticResource SizingGrip}"/>
                    <Rectangle Grid.Row="0" Grid.Column="2" x:Name="topRightSizeGrip" Style="{StaticResource SizingGrip}"/>
                    <Rectangle Grid.Row="2" Grid.Column="2" x:Name="bottomRightSizeGrip" Style="{StaticResource SizingGrip}"/>                   
                    <Rectangle Grid.Row="2" Grid.Column="0" x:Name="bottomLeftSizeGrip" Style="{StaticResource SizingGrip}"/>
                    
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- Window Style -->

    <!-- ISSUE WITH XP : http://connect.microsoft.com/VisualStudio/feedback/details/369500/problem-with-the-allowtransparency-and-popup-controls-in-wpf -->
    <!-- Hotfix : http://support.microsoft.com/kb/943326 -->
    <Style x:Key="SkinWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" /> 
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinHeight" Value="150"/>
        <Setter Property="MinWidth" Value="250"/>
        <Setter Property="Opacity" Value="1.0" />
        <Setter Property="Template" Value="{StaticResource WindowTemplate}" />

        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized"/>
        </Style.Triggers>-->
    </Style>

</ResourceDictionary>